{"ast":null,"code":"var _jsxFileName = \"/Users/titanium/Documents/Development/SynapseTeam/testTask2/test-task-table/src/components/HeaderRow/index.js\";\n\n/** @jsxImportSource @emotion/react */\nimport React from \"react\";\nimport uniqid from \"uniqid\";\nimport PropTypes from \"prop-types\";\nimport { genValues } from \"../../utils/generic\";\nimport { Icon } from \"@iconify/react\";\nimport { styles } from \"./styles\";\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nexport default function HeaderRow(_ref) {\n  let {\n    handleTitleClick\n  } = _ref;\n  const valuesToRender = genValues(null, null, styles);\n\n  const renderRows = function (values) {\n    return values.map(_ref2 => {\n      let {\n        value,\n        style\n      } = _ref2;\n      return _jsxDEV(\"div\", {\n        css: style,\n        children: _jsxDEV(\"a\", {\n          href: \"/#\",\n          onClick: handleTitleClick,\n          children: [value, (value.toLowerCase() === \"sum\" || value.toLowerCase() === \"category\" || value.toLowerCase() === \"decision\") && _jsxDEV(Icon, {\n            icon: \"carbon:caret-sort\",\n            css: styles.icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 9\n        }, this)\n      }, uniqid(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 7\n      }, this);\n    });\n  };\n\n  return _jsxDEV(\"div\", {\n    css: styles.row,\n    children: renderRows(valuesToRender)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 10\n  }, this);\n}\n_c = HeaderRow;\nHeaderRow.propTypes = {\n  handleTitleClick: PropTypes.func\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"HeaderRow\");","map":{"version":3,"sources":["/Users/titanium/Documents/Development/SynapseTeam/testTask2/test-task-table/src/components/HeaderRow/index.js"],"names":["React","uniqid","PropTypes","genValues","Icon","styles","HeaderRow","handleTitleClick","valuesToRender","renderRows","values","map","value","style","toLowerCase","icon","row","propTypes","func"],"mappings":";;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,QAA0B,qBAA1B;AACA,SAASC,IAAT,QAAqB,gBAArB;AAEA,SAASC,MAAT,QAAuB,UAAvB;;AAEA,eAAe,SAASC,SAAT,OAAyC;AAAA,MAAtB;AAAEC,IAAAA;AAAF,GAAsB;AACtD,QAAMC,cAAc,GAAGL,SAAS,CAAC,IAAD,EAAO,IAAP,EAAaE,MAAb,CAAhC;;AAEA,QAAMI,UAAU,GAAG,UAAUC,MAAV,EAAkB;AACnC,WAAOA,MAAM,CAACC,GAAP,CAAW;AAAA,UAAC;AAAEC,QAAAA,KAAF;AAASC,QAAAA;AAAT,OAAD;AAAA,aAChB;AAAoB,QAAA,GAAG,EAAEA,KAAzB;AAAA,kBACE;AAAG,UAAA,IAAI,EAAC,IAAR;AAAa,UAAA,OAAO,EAAEN,gBAAtB;AAAA,qBACGK,KADH,EAEG,CAACA,KAAK,CAACE,WAAN,OAAwB,KAAxB,IACAF,KAAK,CAACE,WAAN,OAAwB,UADxB,IAEAF,KAAK,CAACE,WAAN,OAAwB,UAFzB,KAGC,QAAC,IAAD;AAAM,YAAA,IAAI,EAAC,mBAAX;AAA+B,YAAA,GAAG,EAAET,MAAM,CAACU;AAA3C;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,SAAUd,MAAM,EAAhB;AAAA;AAAA;AAAA;AAAA,cADgB;AAAA,KAAX,CAAP;AAYD,GAbD;;AAeA,SAAO;AAAK,IAAA,GAAG,EAAEI,MAAM,CAACW,GAAjB;AAAA,cAAuBP,UAAU,CAACD,cAAD;AAAjC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;KAnBuBF,S;AAqBxBA,SAAS,CAACW,SAAV,GAAsB;AACpBV,EAAAA,gBAAgB,EAAEL,SAAS,CAACgB;AADR,CAAtB","sourcesContent":["/** @jsxImportSource @emotion/react */\nimport React from \"react\";\nimport uniqid from \"uniqid\";\nimport PropTypes from \"prop-types\";\nimport { genValues } from \"../../utils/generic\";\nimport { Icon } from \"@iconify/react\";\n\nimport { styles } from \"./styles\";\n\nexport default function HeaderRow({ handleTitleClick }) {\n  const valuesToRender = genValues(null, null, styles);\n\n  const renderRows = function (values) {\n    return values.map(({ value, style }) => (\n      <div key={uniqid()} css={style}>\n        <a href=\"/#\" onClick={handleTitleClick}>\n          {value}\n          {(value.toLowerCase() === \"sum\" ||\n            value.toLowerCase() === \"category\" ||\n            value.toLowerCase() === \"decision\") && (\n            <Icon icon=\"carbon:caret-sort\" css={styles.icon} />\n          )}\n        </a>\n      </div>\n    ));\n  };\n\n  return <div css={styles.row}>{renderRows(valuesToRender)}</div>;\n}\n\nHeaderRow.propTypes = {\n  handleTitleClick: PropTypes.func,\n};\n"]},"metadata":{},"sourceType":"module"}