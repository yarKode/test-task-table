{"ast":null,"code":"var _jsxFileName = \"/Users/titanium/Documents/Development/SynapseTeam/testTask2/test-task-table/src/components/CombinedJobs/index.js\",\n    _s = $RefreshSig$();\n\n/** @jsxImportSource @emotion/react */\nimport React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport uniqid from \"uniqid\";\nimport { reduceJobs, calcTotalSum, moneyFormat, sortAscDecision, sortDescDecision, sortAscCategory, sortDescCategory, sortAscSum, sortDescSum } from \"../../utils/generic\";\nimport Row from \"../Row\";\nimport GroupSum from \"../GroupSum\";\nimport HeaderRow from \"./../HeaderRow\";\nimport { categories } from \"../../configure\";\nimport { styles } from \"./styles\";\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nexport default function CombinedJobs(_ref) {\n  _s();\n\n  let {\n    sameJobsArr,\n    groupNumber\n  } = _ref;\n  const uniqJobsByName = reduceJobs(sameJobsArr, categories);\n  const totalSum = calcTotalSum(uniqJobsByName);\n  const totalSumMoneyFormat = moneyFormat(totalSum);\n  const [jobs, setJobs] = useState(uniqJobsByName);\n  const [decisionSortAsc, setDecisionSortAsc] = useState(true);\n  const [categorySortAsc, setCategorySortAsc] = useState(true);\n  const [sumSortAsc, setSumSortAsc] = useState(true);\n\n  const handleTitleClick = e => {\n    var _e$target, _e$target$innerText;\n\n    e.preventDefault();\n    if (!e.target) return;\n    if (uniqJobsByName.length === 1) return;\n    const columnName = (_e$target = e.target) === null || _e$target === void 0 ? void 0 : (_e$target$innerText = _e$target.innerText) === null || _e$target$innerText === void 0 ? void 0 : _e$target$innerText.toLowerCase();\n\n    if (columnName === \"decision\" && decisionSortAsc) {\n      setJobs(prev => {\n        return [...prev.sort(sortAscDecision)];\n      });\n      setDecisionSortAsc(prev => !prev);\n    }\n\n    if (columnName === \"decision\" && !decisionSortAsc) {\n      setJobs(prev => {\n        return [...prev.sort(sortDescDecision)];\n      });\n      setDecisionSortAsc(prev => !prev);\n    }\n\n    if (columnName === \"category\" && categorySortAsc) {\n      setJobs(prev => {\n        return [...prev.sort(sortAscCategory)];\n      });\n      setCategorySortAsc(prev => !prev);\n    }\n\n    if (columnName === \"category\" && !categorySortAsc) {\n      setJobs(prev => {\n        return [...prev.sort(sortDescCategory)];\n      });\n      setCategorySortAsc(prev => !prev);\n    }\n\n    if (columnName === \"sum\" && sumSortAsc) {\n      setJobs(prev => {\n        return [...prev.sort(sortAscSum)];\n      });\n      setSumSortAsc(prev => !prev);\n    }\n\n    if (columnName === \"sum\" && !sumSortAsc) {\n      setJobs(prev => {\n        return [...prev.sort(sortDescSum)];\n      });\n      setSumSortAsc(prev => !prev);\n    }\n  };\n\n  return _jsxDEV(\"div\", {\n    css: styles.container,\n    children: [_jsxDEV(\"div\", {\n      css: styles.titleContainer,\n      children: _jsxDEV(\"div\", {\n        children: _jsxDEV(\"h3\", {\n          children: `Group #${groupNumber}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), _jsxDEV(HeaderRow, {\n      handleTitleClick: handleTitleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), jobs.map((job, i) => {\n      return _jsxDEV(Row, {\n        jobObj: job,\n        index: i + 1\n      }, uniqid(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 16\n      }, this);\n    }), _jsxDEV(GroupSum, {\n      sum: totalSumMoneyFormat\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CombinedJobs, \"HEsMbC+Td4fH/wVDRIBfkfcR0Gk=\");\n\n_c = CombinedJobs;\nCombinedJobs.propTypes = {\n  sameJobsArr: PropTypes.arrayOf(PropTypes.shape),\n  groupNumber: PropTypes.number\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"CombinedJobs\");","map":{"version":3,"sources":["/Users/titanium/Documents/Development/SynapseTeam/testTask2/test-task-table/src/components/CombinedJobs/index.js"],"names":["React","useState","PropTypes","uniqid","reduceJobs","calcTotalSum","moneyFormat","sortAscDecision","sortDescDecision","sortAscCategory","sortDescCategory","sortAscSum","sortDescSum","Row","GroupSum","HeaderRow","categories","styles","CombinedJobs","sameJobsArr","groupNumber","uniqJobsByName","totalSum","totalSumMoneyFormat","jobs","setJobs","decisionSortAsc","setDecisionSortAsc","categorySortAsc","setCategorySortAsc","sumSortAsc","setSumSortAsc","handleTitleClick","e","preventDefault","target","length","columnName","innerText","toLowerCase","prev","sort","container","titleContainer","map","job","i","propTypes","arrayOf","shape","number"],"mappings":"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","sourcesContent":["/** @jsxImportSource @emotion/react */\nimport React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport uniqid from \"uniqid\";\nimport {\n  reduceJobs,\n  calcTotalSum,\n  moneyFormat,\n  sortAscDecision,\n  sortDescDecision,\n  sortAscCategory,\n  sortDescCategory,\n  sortAscSum,\n  sortDescSum,\n} from \"../../utils/generic\";\n\nimport Row from \"../Row\";\nimport GroupSum from \"../GroupSum\";\nimport HeaderRow from \"./../HeaderRow\";\nimport { categories } from \"../../configure\";\n\nimport { styles } from \"./styles\";\n\nexport default function CombinedJobs({ sameJobsArr, groupNumber }) {\n  const uniqJobsByName = reduceJobs(sameJobsArr, categories);\n  const totalSum = calcTotalSum(uniqJobsByName);\n  const totalSumMoneyFormat = moneyFormat(totalSum);\n\n  const [jobs, setJobs] = useState(uniqJobsByName);\n  const [decisionSortAsc, setDecisionSortAsc] = useState(true);\n  const [categorySortAsc, setCategorySortAsc] = useState(true);\n  const [sumSortAsc, setSumSortAsc] = useState(true);\n\n  const handleTitleClick = (e) => {\n    e.preventDefault();\n    if (!e.target) return;\n    if (uniqJobsByName.length === 1) return;\n\n    const columnName = e.target?.innerText?.toLowerCase();\n\n    if (columnName === \"decision\" && decisionSortAsc) {\n      setJobs((prev) => {\n        return [...prev.sort(sortAscDecision)];\n      });\n\n      setDecisionSortAsc((prev) => !prev);\n    }\n\n    if (columnName === \"decision\" && !decisionSortAsc) {\n      setJobs((prev) => {\n        return [...prev.sort(sortDescDecision)];\n      });\n\n      setDecisionSortAsc((prev) => !prev);\n    }\n\n    if (columnName === \"category\" && categorySortAsc) {\n      setJobs((prev) => {\n        return [...prev.sort(sortAscCategory)];\n      });\n\n      setCategorySortAsc((prev) => !prev);\n    }\n\n    if (columnName === \"category\" && !categorySortAsc) {\n      setJobs((prev) => {\n        return [...prev.sort(sortDescCategory)];\n      });\n\n      setCategorySortAsc((prev) => !prev);\n    }\n\n    if (columnName === \"sum\" && sumSortAsc) {\n      setJobs((prev) => {\n        return [...prev.sort(sortAscSum)];\n      });\n\n      setSumSortAsc((prev) => !prev);\n    }\n\n    if (columnName === \"sum\" && !sumSortAsc) {\n      setJobs((prev) => {\n        return [...prev.sort(sortDescSum)];\n      });\n\n      setSumSortAsc((prev) => !prev);\n    }\n  };\n\n  return (\n    <div css={styles.container}>\n      <div css={styles.titleContainer}>\n        <div>\n          <h3>{`Group #${groupNumber}`}</h3>\n        </div>\n      </div>\n      <HeaderRow handleTitleClick={handleTitleClick} />\n      {jobs.map((job, i) => {\n        return <Row jobObj={job} key={uniqid()} index={i + 1} />;\n      })}\n      <GroupSum sum={totalSumMoneyFormat} />\n    </div>\n  );\n}\n\nCombinedJobs.propTypes = {\n  sameJobsArr: PropTypes.arrayOf(PropTypes.shape),\n  groupNumber: PropTypes.number,\n};\n"]},"metadata":{},"sourceType":"module"}